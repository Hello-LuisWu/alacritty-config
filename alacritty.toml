# vertion: 0.15.1
# ===== 常规配置 =====
[general]
live_config_reload = true  # 保存是自动加载配置文件
import = [
    "~/.config/alacritty/gruvbox_material.toml",
    "~/.config/alacritty/keymap.toml",     # 导入快捷键配置
]

# ===== 颜色配置 =====
[colors]
draw_bold_text_with_bright_colors = true
# 颜色模块
# [colors]
#   ├── primary             # 主色（背景、前景）
#   ├── normal              # 普通8色, 普通文本下的基础 8 色（ANSI 颜色）
#   ├── bright              # 高亮8色, 高亮文本下的8种加亮色，通常是 normal 颜色的更亮版本
#   ├── dim                 # 暗色8色（可选）, 低亮度终端（或者非激活窗口）下使用的颜色。可选。
#   ├── cursor              # 光标, 自定义光标本体和文本颜色
#   ├── vi_mode_cursor      # Vim 模式光标, 启用 Vim 模式时，光标颜色单独设置
#   ├── selection           # 选择文本, 文本选择颜色
#   ├── search              # 搜索匹配, 文本搜索颜色
#   └── footer_bar          # 底部提示栏 	搜索时底部提示栏的颜色

# 颜色属性
# [colors.primary]
# background = "#1d2021"      # 背景色
# foreground = "#ebdbb2"      # 正常文本前景色
# bold = "#fbf1c7"            # 粗体文本前景色（可选）
# dim_foreground = "#a89984"  # 非激活窗口的前景色（可选）

# [colors.bright]
# black = "0x5c6370"
# blue = "0x61afef"
# cyan = "0x56b6c2"
# green = "0x98c379"
# magenta = "0xc678dd"
# red = "0xe06c75"
# white = "0xe6efff"
# yellow = "0xd19a66"
#
# [colors.dim]
# black = "0x1e2127"
# blue = "0x61afef"
# cyan = "0x56b6c2"
# green = "0x98c379"
# magenta = "0xc678dd"
# red = "0xe06c75"
# white = "0x828791"
# yellow = "0xd19a66"
#
# [colors.normal]
# black = "0x1e2127"
# blue = "0x61afef"
# cyan = "0x56b6c2"
# green = "0x98c379"
# magenta = "0xc678dd"
# red = "0xe06c75"
# white = "0x828791"
# yellow = "0xd19a66"
#
# [colors.primary]
# background = "0x1e2127"
# bright_foreground = "0xe6efff"
# foreground = "0xabb2bf"


# ===== 环境变量配置 =====

[env]
TERM = "tmux-256color"
# ===========================
# 环境变量设置
#
# 所有在 [env] 中设置的键值对，
# 都会作为环境变量传递给 Alacritty 启动的所有进程，
# 包括终端 shell（bash、zsh、fish 等）以及通过终端运行的程序。
#
# 如果 Alacritty 本身设置了某些变量，这里设置的会覆盖它。
#
# ===========================

# ===========================
# X11 缩放因子
# - 用于 Linux 上的 X11 窗口系统
# - 控制窗口缩放比例
# 示例：
# "1.0" = 无缩放
# "1.5" = 放大 150%
# ===========================
WINIT_X11_SCALE_FACTOR = "1.0"

# ===========================
# 禁用 Wayland（在部分 Linux 桌面环境下）
# 设置为 1 表示强制使用 X11
# ===========================
# WAYLAND_DISPLAY = "1"

# ===========================
# 自定义 PATH 环境变量（示例）
# 可以为 Alacritty 单独设置 PATH
# ===========================
# PATH = "/usr/local/bin:/usr/bin:/bin"

# ===========================
# 语言环境（示例）
# 防止中文乱码
# ===========================
# LANG = "zh_CN.UTF-8"
# LC_ALL = "zh_CN.UTF-8"

# ===========================
# 代理设置（示例）
# 仅当前终端窗口有效
# ===========================
# HTTP_PROXY = "http://127.0.0.1:7890"
# HTTPS_PROXY = "http://127.0.0.1:7890"


# ===== 终端配置 =====
# 控制默认使用的 shell，以及是否允许通过 OSC52 协议进行剪贴板操作（常用于 SSH 远程复制粘贴）。
[terminal]
# ==========================
# 设置默认终端 Shell
# - program ：指定终端路径
# - args    ：传递给 Shell 的参数
# ==========================

# 示例：使用 zsh 并以登录模式启动
shell = { program = "/bin/zsh", args = ["-l"] }

# MacOS 示例：
# shell = { program = "/opt/homebrew/bin/fish", args = ["-l"] }

# Windows 示例：
# shell = { program = "C:\\Program Files\\Git\\bin\\bash.exe", args = ["--login"] }

# ==========================
# 是否允许使用 OSC52 协议进行剪贴板操作
# - 用于 SSH 场景下远程复制
# - 四个选项：
#   - "Disabled"    → 禁用
#   - "OnlyCopy"    → 仅允许复制
#   - "OnlyPaste"   → 仅允许粘贴
#   - "CopyPaste"   → 允许复制和粘贴
# ==========================
osc52 = "CopyPaste"

# ===== 字体配置 =====
[font]
size = 22
normal = {family = "Iosevka Nerd Font", style = "Medium"}
bold = {family = "Iosevka Nerd Font", style = "Bold" }
italic = { family = "Iosevka Nerd Font", style = "Italic"}
bold_italic = { family = "Iosevka Nerd Font", style = "Bold Italic"}
offset = { x = 0, y = 2 }  # 字符间距和行距
glyph_offset = { x = 0, y = 0 }    # 调整字符在单元格中的位置

# 是否启用内置的 box drawing 字符
# （表格边框、powerline 图标等显示更平滑）
# true = 启用（推荐），false = 使用字体自带的
builtin_box_drawing = true

# offset = {x = 3, y = 13}  # 行距和间距

[scrolling]
history = 10000
multiplier = 3

# ===== 窗口配置 =====
[window]
dynamic_title = false   # 是否允许终端程序修改窗口标题
blur = true   # 开启模糊
position = { x = 1500, y = 300}  # 启动后窗口的位置

# 窗口装饰
# - "Full"         → 有边框 + 标题栏（默认）
# - "None"         → 无边框无标题栏
# - "Transparent"  → macOS 专用，透明标题栏 + 按钮
# - "Buttonless"   → macOS 专用，透明标题栏，无按钮
decorations = "Full" 
opacity = 0.7
title = "Luis Wu"
padding = { x = 5, y = 2}  # 内边距

# 启动模式
# - "Windowed"         → 普通窗口（默认）
# - "Maximized"        → 启动时最大化
# - "Fullscreen"       → 启动时全屏
# - "SimpleFullscreen" → macOS 专用，全屏但可叠加其他窗口
startup_mode = "Windowed"

# 窗口装饰主题（仅限 GTK/Wayland/macOS）
# - "Dark"  → 强制暗色
# - "Light" → 强制亮色
# - "None"  → 跟随系统（默认）
decorations_theme_variant = "Light"

# 调整窗口尺寸时，是否以字符单元为最小单位
# true  → 每次缩放都是一个字符单元的整数倍
# false → 自由缩放
# 支持：macOS 和 X11
resize_increments = true

# 窗口初始尺寸（以字符为单位，而不是像素）
# columns: 列数，最小 2
# lines: 行数，最小 1
# 0 表示自动由窗口管理器决定
# 修改需要重启生效
dimensions = { columns = 100, lines = 32 }

# macOS 专用
# Option 键是否作为 Alt
# - "OnlyLeft"  → 左 Option
# - "OnlyRight" → 右 Option
# - "Both"      → 两个 Option
# - "None"      → 都不作为 Alt（默认）
option_as_alt = "None"

# 窗口层级
# - "Normal"        → 默认窗口
# - "AlwaysOnTop"   → 始终置顶
level = "Normal"

# 提示铃配置

# 	控制如何划词、双击选择，以及是否自动复制到系统剪贴板。
[selection]

# =========================================
# 语义分隔符（双击或使用 vi 模式选择的边界）
# 默认值：
# ",│`|:\"' ()[]{}<>\t"
# 含义：
# - 遇到这些符号会被当作单词分隔
# - 双击、Ctrl+单击，或vi模式选择时生效
# 你可以根据需求自定义
# =========================================
semantic_escape_chars = ",│`|:\"' ()[]{}<>"

# 举例：
# 如果你不希望下划线 _ 被当作分隔符（即 foo_bar 被认为是一个整体），
# 就不要加入 _ 到这个字符串中。

# =========================================
# 是否自动将选择的内容保存到剪贴板
# - true  → 自动复制到剪贴板
# - false → 只保存到鼠标选择缓冲区（默认）
# =========================================
save_to_clipboard = true


# ===== 光标配置 =====
# 控制光标的形状、闪烁行为、在 Vi 模式下的样式，以及失去焦点时的显示效果。
[cursor]

# =========================================
# 光标样式
# - shape ：形状
#   - "Block"      → 方块（默认）
#   - "Underline"  → 下划线
#   - "Beam"       → 竖线
#
# - blinking ：闪烁行为
#   - "Never"   → 永不闪烁
#   - "Off"     → 默认不闪烁（可手动开启）
#   - "On"      → 默认闪烁
#   - "Always"  → 强制持续闪烁
# =========================================
style = { shape = "Beam", blinking = "On" }  # 竖线光标，默认闪烁

# =========================================
# Vi 模式下的光标样式
# - None → 使用普通模式的光标样式（默认）
# - 也可以自定义 shape 和 blinking
# =========================================
vi_mode_style = { shape = "Block", blinking = "Never" }
# vi 模式使用方块光标，且不闪烁

# =========================================
# 闪烁间隔（单位：毫秒）
# 例如：750 → 每 750ms 切换一次可见/不可见
# =========================================
blink_interval = 500  # 更快的闪烁

# =========================================
# 闪烁超时（单位：秒）
# 超过此时间后停止闪烁
# - 设置为 0 → 永不超时，持续闪烁
# =========================================
blink_timeout = 0  # 永不超时，持续闪烁

# =========================================
# 当窗口失去焦点时，光标是否显示为空心
# true  → 空心（默认）
# false → 保持实心
# =========================================
unfocused_hollow = true

# =========================================
# 光标厚度
# - 仅对 "Beam" 和 "Underline" 有效
# - 数值范围：0.0 ~ 1.0
# - 默认：0.15，值越大越粗
# =========================================
thickness = 0.2  # 更粗的光标



# ===== 鼠标配置 =====
# 用于设置鼠标在终端中的行为：
#   输入时是否隐藏鼠标; 鼠标按键绑定
#   可以通过鼠标执行复制、粘贴、选择等操作
[mouse]

# ===================================
# 输入时隐藏鼠标
# true  → 打字时自动隐藏鼠标光标
# false → 始终显示鼠标（默认）
# ===================================
hide_when_typing = true


# ===================================
# 鼠标按键绑定
# - mouse ：指定鼠标按键
#    → "Left"（左键）
#    → "Right"（右键）
#    → "Middle"（中键）
#    → "Back"（鼠标侧键后退）
#    → "Forward"（鼠标侧键前进）
#
# - mods ：修饰键
#    → "Control"、"Shift"、"Alt"、"Command"（可组合使用）
#
# - action：
#    → Paste                 粘贴
#    → Copy                  复制
#    → ExpandSelection       将选择范围扩展到当前鼠标位置
#    → 也支持 keyboard 的其他 action
# ===================================

bindings = [
  # 右键 + Ctrl → 粘贴
  { mouse = "Right", mods = "Control", action = "Paste" },

  # 中键点击 → 复制当前选择
  { mouse = "Middle", mods = "None", action = "Copy" },

  # Shift + 左键 → 扩展选择
  { mouse = "Left", mods = "Shift", action = "ExpandSelection" },
]



